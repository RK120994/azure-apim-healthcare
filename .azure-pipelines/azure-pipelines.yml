trigger:
  branches:
    include:
      - main

variables:
  TF_VERSION: '1.6.0'
  AZURE_SERVICE_CONNECTION: 'AzureSPN'
  TF_STORAGE_RG: 'terraform-state-rg'
  TF_STORAGE_ACCOUNT: 'tfstateapim'
  TF_CONTAINER_NAME: 'apimstate'
  TF_STATE_KEY: 'terraform.tfstate'

pool:
  vmImage: ubuntu-latest

stages:
- stage: Terraform_Deploy
  jobs:
  - job: terraform
    steps:
    - task: UseTerraform@1
      inputs:
        terraformVersion: $(TF_VERSION)

    - checkout: self

    - task: TerraformCLI@1
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendType: 'azurerm'
        backendServiceArm: $(AZURE_SERVICE_CONNECTION)
        ensureBackend: true
        backendAzureRmResourceGroupName: $(TF_STORAGE_RG)
        backendAzureRmStorageAccountName: $(TF_STORAGE_ACCOUNT)
        backendAzureRmContainerName: $(TF_CONTAINER_NAME)
        backendAzureRmKey: $(TF_STATE_KEY)

    - task: TerraformCLI@1
      inputs:
        provider: 'azurerm'
        command: 'validate'

    - task: TerraformCLI@1
      inputs:
        provider: 'azurerm'
        command: 'plan'
        environmentServiceName: $(AZURE_SERVICE_CONNECTION)

    - task: TerraformCLI@1
      inputs:
        provider: 'azurerm'
        command: 'apply'
        environmentServiceName: $(AZURE_SERVICE_CONNECTION)
        args: '-auto-approve'
